#include "main.h"

/**
 * _strncpy - Copies n characters from the string pointed to by src to dest.
 * @dest: Destination string.
 * @src: Source string.
 * @n: Number of bytes to be copied.
 * Return: Pointer to destination string dest.
 */
char *_strncpy(char *dest, char *src, int n)
{
    int i = 0;

    while (i < n && src[i] != '\0')
    {
        dest[i] = src[i];
        i++;
    }
    while (i < n)
    {
        dest[i] = '\0';
        i++;
    }
    return (dest);
}

/**
 * _strcmp - Compares two strings.
 * @s1: First string.
 * @s2: Second string.
 * Return: Difference between the two strings.
 */
int _strcmp(char *s1, char *s2)
{
    while (*s1 && *s1 == *s2)
    {
        s1++;
        s2++;
    }
    return (*s1 - *s2);
}


/**
 * _memset - Fills the first n bytes of memory area pointed to by s with b.
 * @s: Memory area.
 * @b: Constant byte.
 * @n: Number of bytes to be filled.
 * Return: Pointer to the memory area s.
 */
char *_memset(char *s, char b, unsigned int n)
{
    unsigned int i;

    for (i = 0; i < n; i++)
    {
        s[i] = b;
    }
    return (s);
}

/**
 * _memcpy - Copies n bytes from src to dest.
 * @dest: Destination memory area.
 * @src: Source memory area.
 * @n: Number of bytes to be copied.
 * Return: Pointer to dest.
 */
char *_memcpy(char *dest, char *src, unsigned int n)
{
    unsigned int i;

    for (i = 0; i < n; i++)
    {
        dest[i] = src[i];
    }
    return (dest);
}
#include "main.h"

/**
 * _strchr - Locates the first occurrence of c in the string s.
 * @s: String to be searched.
 * @c: Character to locate.
 * Return: Pointer to the first occurrence or NULL if not found.
 */
char *_strchr(char *s, char c)
{
    while (*s != '\0')
    {
        if (*s == c)
            return (s);
        s++;
    }
    if (c == '\0')
        return (s);
    return (NULL);
}

/**
 * _strspn - Computes the length of the maximum initial segment of s
 * which consists entirely of bytes in accept.
 * @s: String to be searched.
 * @accept: Bytes to match.
 * Return: Number of bytes in the segment.
 */
unsigned int _strspn(char *s, char *accept)
{
    unsigned int len = 0;

    while (*s && _strchr(accept, *s++))
    {
        len++;
    }
    return (len);
}

/**
 * _strpbrk - Searches string s for the first occurrence of any byte from accept.
 * @s: String to be searched.
 * @accept: Bytes to match.
 * Return: Pointer to byte in s that matches one of the bytes in accept,
 * or NULL if no such byte is found.
 */
char *_strpbrk(char *s, char *accept)
{
    while (*s)
    {
        if (_strchr(accept, *s))
            return (s);
        s++;
    }
    return (NULL);
}
